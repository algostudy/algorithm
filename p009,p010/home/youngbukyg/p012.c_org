/*
rev0 : 2013_0204(mon), 23:11~ 
	this is squence problem

point1
	An = A1 + sig{Bk(k=2 ; n ; k++)}
	Bk = B1 + (n - 1)d
  	   = 4 + 2n - 2
           = 2n + 2
       
     so, An = A1 + sig{2n + 2}
            = n^2 + n + 1


point2
	while(k<n+1) 		//k means inputs
		if (n = odd)
			down direction => y--
		elseif(n = even)
			left direction => x--

	
	when(k=n+1)
		if (n = odd)
			right direction => x++
		elseif(n = even)
			up direction => y++

	while(n+1<k<2n+2)
		if (n = odd)
			up direction => y++
		elseif(n = even)
			right direction => x++


*/




#include <stdio.h>


int fine_n(int k)
{
//what n is front numer of k
	int s; 		//s means sum

	for(int a=1; a < 2*10^9; a++)	
	{
		s = a^2 + a + 1;
		if(k > s)
			return a;
		
	}



}

int main()
{
	printf("start p012\n");
	
	int k; //input
	int n; //harng
	int s; //sum	
	int d; //k - s	

	scanf("%d",&k);

	
	n = find_n(k);
	d = k - sd
	
	if(s<n)	  
	{
		if(odd) //
			x = n - s + 1;
			y = n + 1;
		else	//
			x = n - s + 1;
			y = n + 1;
		else
	}

	else if(s==n+1)	 // 
	{
		if(odd)
		else
	}

	else if(n+1<s<2n+2) // 
	{
		if(odd)
		else
	}




	( 		//k means inputs
		if (n = odd)
			down direction => y--
		elseif(n = even)
			left direction => x--

	
	when(k=n+1)
		if (n = odd)
			right direction => x++
		elseif(n = even)
			up direction => y++

	while(n+1<k<2n+2)
		if (n = odd)
			up direction => y++
		elseif(n = even)
			right direction => x++

{

	}		








	return 0;
}
